{"version":3,"sources":["./src/app/app.component.html","./src/app/components/home/home.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<router-outlet></router-outlet>  \"","module.exports = \"<h1>Migration of Employee Profile</h1>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col col-lg-3 col-md-3 col-sm-6\\\">\\n        <div class=\\\"input-group\\\">\\n            <select2 [data]=\\\"employeeData\\\" (valueChanged)=\\\"selectedEmployee2($event)\\\"></select2>\\n            <!-- <select name=\\\"oldEmp\\\" id=\\\"oldEmp\\\" (change)=\\\"selectedEmployee($event.target.value)\\\" class=\\\"form-control\\\">\\n                <option value=\\\"\\\">Select Employee Profile</option>\\n                <option value=\\\"{{ item.EIC }}\\\" *ngFor=\\\"let item of Employees\\\">{{ item.lastName }}, {{ item.firstName }}\\n                </option>\\n            </select> -->\\n            <div class=\\\"input-group-btn\\\" *ngIf=\\\"selectedEmployeeEIC\\\">\\n                <button [swal]=\\\"{\\n                        title: 'CONFIRMATION',\\n                        text: 'Continue to migrate employee record?',\\n                        type: 'question',\\n                        showCancelButton: true,\\n                        confirmButtonText: 'Yes, migrate it!'\\n                    }\\\" \\n                    (confirm)=\\\"MigrateEmployee()\\\"\\n                    (cancel)=\\\"FetchOldEmployees()\\\"\\n                    class=\\\"btn btn-primary\\\">Submit</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- <hr>\\n<div *ngIf=\\\"EmployeeProfile\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-lg-3\\\"><h4>Newly Migrated Employee Profile!</h4></div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-lg-1\\\"><b>Id No.:</b></div>\\n        <div class=\\\"col col-lg-2\\\">{{ EmployeeProfile.idNo }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-lg-1\\\"><b>Lastname:</b></div>\\n        <div class=\\\"col col-lg-2\\\">{{ EmployeeProfile.lastName }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-lg-1\\\"><b>Firstname:</b></div>\\n        <div class=\\\"col col-lg-2\\\">{{ EmployeeProfile.firstName }}</div>\\n    </div>\\n</div> -->\\n\\n<swal\\n    #SwalMigratedProfile\\n    title=\\\"New Profile Migrated\\\"\\n    text=\\\"Id No\\\"\\n    type=\\\"info\\\"\\n    >\\n    <div *swalPartial class=\\\"row\\\">\\n        <div class=\\\"col\\\">{{ EmployeeProfile.idNo }}  {{ EmployeeProfile.lastName }}, {{ EmployeeProfile.firstName }} {{ EmployeeProfile.extName }}</div>\\n    </div>\\n</swal>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'xApp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { SweetAlert2Module } from \"@sweetalert2/ngx-sweetalert2\";\r\nimport { Select2Module } from \"ng2-select2\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SweetAlert2Module.forRoot({\r\n      buttonsStyling: false,\r\n      customClass: 'modal-content',\r\n      confirmButtonClass: 'btn btn-primary',\r\n      cancelButtonClass: 'btn'\r\n    }),\r\n    Select2Module\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormControl } from \"@angular/forms\";\nimport { SwalComponent, SwalPartialTargets } from '@sweetalert2/ngx-sweetalert2';\nimport { Select2OptionData } from \"ng2-select2\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public employeeData: Array<Select2OptionData>;\n\n  @ViewChild(\"SwalMigratedProfile\", { static: false})  SwalMigratedProfile: SwalComponent;\n\n  myControl = new FormControl;\n  options: string[] = ['One', 'Two', 'Three'];\n\n  Employees: any;\n  EmployeeProfile: any;\n  source: any;\n  confirmed: any;\n\n  selectedEmployeeEIC: any;\n\n  constructor(\n    private http: HttpClient,\n    private swal: SwalPartialTargets\n  ) { }\n\n  ngOnInit() {\n    this.FetchOldEmployees();\n  }\n\n  /**\n   * MigrateEmployee\n   */\n  public MigrateEmployee() {\n\n    let url = \"/RSPUtility/PostEmployee\";\n\n    let body = {\n      \"EIC\": this.selectedEmployeeEIC\n    }\n\n    this.http.post(url, body).toPromise().then(\n      employee => {\n        this.EmployeeProfile = employee;\n        console.log(this.EmployeeProfile);\n        \n        this.SwalMigratedProfile.show();\n\n        this.FetchOldEmployees();\n        \n      },\n      reason => {\n        console.log(reason.error);\n      }\n    );\n    \n  }\n\n  /**\n   * selectedType\n   */\n  public selectedEmployee(paramValue) {\n    this.selectedEmployeeEIC = paramValue;\n  }\n\n  public selectedEmployee2(data) {\n    console.log(data);\n    \n    this.selectedEmployeeEIC = data.value;\n  }\n\n  /**\n   * FetchOldEmployees\n   */\n  public FetchOldEmployees() {\n\n    let url = \"/RSPUtility/OldEmployees\"\n    this.http.get(url).toPromise().then(\n      employees => {\n        this.Employees = employees;\n        this.employeeData = this.Employees;        \n      },\n      reason => {\n        console.log(reason.error);\n        \n      }\n    );\n    \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}